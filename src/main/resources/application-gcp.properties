# Set to the Postgres user you want to connect to; 'postgres' is the default user.
#spring.datasource.username=postgres
#spring.datasource.password=196507
# This value is formatted in the form: [gcp-project-id]:[region]:[instance-name]
#spring.cloud.gcp.sql.instance-connection-name=my-project-4-19763:us-central1:springboot02-1
#spring.datasource.url=jdbc:postgresql://google/postgres?cloudSqlInstance=tidy-generator-251320:us-central1:mipostgres&socketFactory=com.google.cloud.sql.postgres.SocketFactory
spring.datasource.url=jdbc:postgresql://google/springboot02_dev?useSSL=false&socketFactoryArg=my-project-4-19763:us-central1:springboot02-1&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=postgres&password=196507
spring.datasource.continue-on-error=true
spring.datasource.initialization-mode=always


server.port=8080
#spring.datasource.url=jdbc:postgresql://35.225.98.163:5432/sampledb
#spring.datasource.username=postgres
#spring.datasource.password=196507

spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.properties.hibernate.default_schema = public
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.main.allow-bean-definition-overriding=true
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


amqp.host=${MESSAGING_SERVICE_HOST:localhost}
amqp.port=${MESSAGING_SERVICE_PORT:61616}
amqp.cola=${COLA_MENSAJES:example}
amqphub.amqp10jms.remote-url=amqp://${amqp.host}:${amqp.port}?jms.username=admin&jms.password=196507

